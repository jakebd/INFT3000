First I did a npm init to generate some starter files.
Then npm install to get dependancies

Prog3017 Oct 12th video sets up folder structure. 
Middleware: Morgan - Log api requests to console.
Package: Nodemon

First Step: Use express-generator to build the structure of an app
    -In terminal Type: express --git
    -The --git creates a .gitignore.

Next I created an API folder inside my routes and I moved the user.js into there,
    -then i created a new index.js inside there. I coppied over that file from myFullStackApp
    -and then i pointed the router to the right place from app.js

working on Mongoose now
    -npm i mongoose

need to now require mongoose in our application.
added connection string in the app.js.(mongodb://localhost:27017/stock_market)
***We Will need to change this later, SQL DB***

Create a models folder in your root.
This is where naming matters, Your model should be a singular of the collection
    -example: collection is stocks, model is stock.js

-Build out the models
-Build out the API end points for SQL
-created a middleware folder

-Coppied over a starter client app from a vite react build.
    -npm install
    -npm run dev to see the template

-right now both the back end and front end are started seprately 
-we are going to use the npm package called concurrently.
    -this will allow us to start both at the same time.

***Concurrently***
-npm i concurrently  --save-dev
    -this will save it as a dev dependency.
    -this creates a second category of dependencies in the package.json

-changed the package.json.
    -added a script for clarity:
        "api": "nodemon ./bin/www",
    -added a script:     
        "dev": "concurrently \"npm run api\" \"cd client && npm run dev\" --kill-others"
    -This will now allow us to run the api and the react app in same command
    -

 November 2nd, 2023 - tic tac toe
 November 6th, 2023 - fun with forms app
 November 14th, 2023 - front end (react template)